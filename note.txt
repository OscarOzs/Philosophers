PARSING :
./philo [nbr of philo] [time to die] [time to eat] [time to sleep]
*[nbr each philo must atleast eat]
- si nbr d'arg != 5 || 6
- si arg != nbr
- minimum 1 philo
- si nbr > int

___________________________________________________________________________

Note :
- proteger le retour de ses pthread fonctions
- utiliser les fonctions pthreah_mutex_init et pthread_mutex_destroy
- utiliser les fonctions pthread_mutex_lock et pthread_mutex_unlock
- exit function interdite

structure des philos :
- son numero
- boolean de la fourchette
- next (prochain philo)
- previous (precedent philo)

GENERAL :
- gerer cas de 2 philo
- gerer cas de 1 philo (attend x mls puis meurt)

thread :
- pthread_t *variable*
- pthread_create(adresse de struct, NULL, adresse de fctn, NULL)
- pthread_join(struct, NULL)

mutex :
- check si un des philo est mort
- mutex sur fourchette

fctn pour print :
- ne pas print les ms si == 0

gettime : dans ft_routine
- gettimeofday avec start
- *algo principale*
- gettimeofday avec end
- if start.tv_sec == end.tv_sec : print seulement ms (si different de 0)
- else : print seconde + ms (si different de 0)

ROUTINE :
- routine gettime
- preparation des threads pour chaque philo
- main algo
- fin de routine gettime